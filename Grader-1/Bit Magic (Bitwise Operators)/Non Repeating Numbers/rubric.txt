Two Non-Repeating Elements in an Array
Solution 1: Brute Force (Using Sorting)
1. Sort the entire array in ascending order [2 marks]
2. Iterate through the sorted array and compare adjacent elements [1 mark]
3. If an element doesn't match with the next element, add it to the result (and handle the case when the last element is unique) [2 marks]
4. Return the result array containing the two non-repeating elements in sorted order [1 mark]
Solution 2: Optimal Approach (Using XOR)
1.Calculate the XOR of all elements in the array (this will give XOR of the two non-repeating numbers) [1 mark]
2.Find the rightmost set bit in the XOR result [1 mark]
3.Divide the elements into two groups: one with the bit set and another with the bit not set [1 mark]
4.XOR all elements in the first group to get the first non-repeating element [1 mark]
5. XOR all elements in the second group to get the second non-repeating element [1 mark]
6. Return the two elements in increasing order [1 mark]
Solution 3: Using Frequency Counter
1.Create a frequency map (hash map or dictionary) to store the count of each element [1 mark]
2.Iterate through the array and update the frequency of each element [1 mark]
3.Identify elements with frequency 1 (the non-repeating elements) [1 mark]
4.Return these elements in increasing order [1 mark]
Solution 4: Using Set
1.Create an empty set [1 mark]
2.Iterate through the array: if an element exists in the set, remove it; otherwise, add it to the set [2 marks]
3.After processing all elements, the set will contain only the two non-repeating elements [1 mark]
4.Return these elements in increasing order [1 mark]