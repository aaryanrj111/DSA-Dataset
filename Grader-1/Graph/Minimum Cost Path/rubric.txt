Minimum Cost Path - CustomRubric
Solution 1: Dijkstra's Algorithm Approach

1.Create a data structure to store minimum costs to reach each cell, initialized with maximum value. [1 mark]
2.Set up a priority-based data structure to process cells in order of minimum cost. [1 mark]
3.Initialize the starting point with its cost in both data structures. [1 mark]
4.Extract the minimum cost cell from the priority structure. [1 mark]
5.Explore all four adjacent cells and update costs if cheaper paths are found. [1 mark]
6.Handle edge cases and boundary conditions correctly. [1 mark]
7.Return the minimum cost stored for the destination cell. [1 mark]

Solution 2: BFS with Priority Structure

1.Set up a priority structure to store cells sorted by accumulated cost. [1 mark]
2.Create a structure to track processed cells. [1 mark]
3.Start from the initial cell and explore in order of minimum accumulated cost. [1 mark]
4.Check neighboring cells and update costs if better paths are found. [1 mark]
5.Add cells to priority structure based on updated costs. [1 mark]
6.Properly handle grid boundaries. [1 mark]
7.Return the minimum cost when reaching the destination cell. [1 mark]