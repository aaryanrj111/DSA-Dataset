"Selected rubric"  
Solution 1 (Using Graph and Eulerian Circuit)

"Feedback with marks"  
1. Create a directed graph where each vertex represents a character (first and last characters of the strings). [1 mark]  
   - The solution correctly initializes a graph using a `Map<Character, List<Character>>` to represent the directed edges between characters. [1 mark]

2. For each string in the array, add a directed edge from the first character to the last character of the string. [1 mark]  
   - The solution iterates over each string and adds a directed edge from the first character to the last character in the adjacency list. [1 mark]

3. Check if every vertex in the graph has equal in-degree and out-degree (necessary condition for Eulerian circuit). [1 mark]  
   - The solution correctly checks if the in-degree and out-degree for each character are equal using `inDegree` and `outDegree` maps. [1 mark]

4. Verify that all non-zero degree vertices form a single strongly connected component (using DFS or similar algorithm). [1 mark]  
   - The solution uses a DFS approach to check if all nodes are in the same strongly connected component, ensuring connectivity. [1 mark]

"Marks Scored out of total marks"  
4 out of 4 marks